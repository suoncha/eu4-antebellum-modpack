tuh_faction_initialization_effect = {
	tuh_balance_faction_influence_effect = yes
	tuh_add_faction_influence_based_on_ruler_dynasty_effect = yes
	tuh_house_influence_ruler_modifier_effect = yes
	tuh_set_founding_house_variable_effect = yes
	tuh_set_current_ruling_house_variable_effect = yes
	tuh_initialize_total_election_wins_vars = yes
	tuh_initialize_consecutive_election_wins_vars = yes
}

tuh_balance_faction_influence_effect = {
	set_faction_influence_to_0_effect = {
		faction = basarab_faction
	}
	add_faction_influence = {
		faction = basarab_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = draculesti_faction
	}
	add_faction_influence = {
		faction = draculesti_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = danesti_faction
	}
	add_faction_influence = {
		faction = danesti_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = bibescu_faction
	}
	add_faction_influence = {
		faction = bibescu_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = brancoveanu_faction
	}
	add_faction_influence = {
		faction = brancoveanu_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = movilesti_faction
	}
	add_faction_influence = {
		faction = movilesti_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = cantacuzino_faction
	}
	add_faction_influence = {
		faction = cantacuzino_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = ghica_faction
	}
	add_faction_influence = {
		faction = ghica_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = mavrocordatos_faction
	}
	add_faction_influence = {
		faction = mavrocordatos_faction
		influence = 10
		perform_readjustment = no
	}
	set_faction_influence_to_0_effect = {
		faction = racovita_faction
	}
	add_faction_influence = {
		faction = racovita_faction
		influence = 10
		perform_readjustment = no
	}
}

tuh_add_faction_influence_based_on_ruler_dynasty_effect = {
	if = {
		limit = {
			dynasty = "Basarab"
		}
		add_faction_influence = {
			faction = basarab_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Draculesti"
		}
		add_faction_influence = {
			faction = draculesti_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Danesti"
		}
		add_faction_influence = {
			faction = danesti_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Bibescu"
		}
		add_faction_influence = {
			faction = bibescu_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Brancoveanu"
		}
		add_faction_influence = {
			faction = brancoveanu_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Movilesti"
		}
		add_faction_influence = {
			faction = movilesti_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Cantacuzino"
		}
		add_faction_influence = {
			faction = cantacuzino_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Ghica"
		}
		add_faction_influence = {
			faction = ghica_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Mavrocordatos"
		}
		add_faction_influence = {
			faction = mavrocordatos_faction
			influence = 30
		}
	}
	else_if = {
		limit = {
			dynasty = "Racovita"
		}
		add_faction_influence = {
			faction = racovita_faction
			influence = 30
		}
	}
}

tuh_add_faction_influence_on_dev_effect = {
	trigger_switch = {
		on_trigger = holy_order		# This will check which stronghold is active in the province
		basarab_stronghold = {
			owner = {
				add_faction_influence = {
					faction = basarab_faction
					influence = 1
				}
			}
		}
		bibescu_stronghold = {
			owner = {
				add_faction_influence = {
					faction = bibescu_faction
					influence = 1
				}
			}
		}
		draculesti_stronghold = {
			owner = {
				add_faction_influence = {
					faction = draculesti_faction
					influence = 1
				}
			}
		}
		brancoveanu_stronghold = {
			owner = {
				add_faction_influence = {
					faction = brancoveanu_faction
					influence = 1
				}
			}
		}
		movilesti_stronghold = {
			owner = {
				add_faction_influence = {
					faction = movilesti_faction
					influence = 1
				}
			}
		}
		danesti_stronghold = {
			owner = {
				add_faction_influence = {
					faction = danesti_faction
					influence = 1
				}
			}
		}
		ghica_stronghold = {
			owner = {
				add_faction_influence = {
					faction = ghica_faction
					influence = 1
				}
			}
		}
		racovita_stronghold = {
			owner = {
				add_faction_influence = {
					faction = racovita_faction
					influence = 1
				}
			}
		}
		cantacuzino_stronghold = {
			owner = {
				add_faction_influence = {
					faction = cantacuzino_faction
					influence = 1
				}
			}
		}
		mavrocordatos_stronghold = {
			owner = {
				add_faction_influence = {
					faction = mavrocordatos_faction
					influence = 1
				}
			}
		}
	}
}

tuh_house_influence_ruler_modifier_effect = {
	trigger_switch = {
		on_trigger = dynasty
		"Basarab" = {
			add_ruler_modifier = {
				name = basarab_in_power
				duration = -1
			}
		}
		"Draculesti" = {
			add_ruler_modifier = {
				name = draculesti_in_power
				duration = -1
			}
		}
		"Danesti" = {
			add_ruler_modifier = {
				name = danesti_in_power
				duration = -1
			}
		}
		"Bibescu" = {
			add_ruler_modifier = {
				name = bibescu_in_power
				duration = -1
			}
		}
		"Brancoveanu" = {
			add_ruler_modifier = {
				name = brancoveanu_in_power
				duration = -1
			}
		}
		"Movilesti" = {
			add_ruler_modifier = {
				name = movilesti_in_power
				duration = -1
			}
		}
		"Cantacuzino" = {
			add_ruler_modifier = {
				name = cantacuzino_in_power
				duration = -1
			}
		}
		"Ghica" = {
			add_ruler_modifier = {
				name = ghica_in_power
				duration = -1
			}
		}
		"Mavrocordatos" = {
			add_ruler_modifier = {
				name = mavrocordatos_in_power
				duration = -1
			}
		}
		"Racovita" = {
			add_ruler_modifier = {
				name = racovita_in_power
				duration = -1
			}
		}
	}
}

set_var_to_basarab_constant = {
	set_variable = {
		which = $var$
		value = 0
	}
}

set_var_to_bibescu_constant = {
	set_variable = {
		which = $var$
		value = 1
	}
}

set_var_to_draculesti_constant = {
	set_variable = {
		which = $var$
		value = 2
	}
}

set_var_to_brancoveanu_constant = {
	set_variable = {
		which = $var$
		value = 3
	}
}

set_var_to_movilesti_constant = {
	set_variable = {
		which = $var$
		value = 4
	}
}

set_var_to_danesti_constant = {
	set_variable = {
		which = $var$
		value = 5
	}
}

set_var_to_ghica_constant = {
	set_variable = {
		which = $var$
		value = 6
	}
}

set_var_to_racovita_constant = {
	set_variable = {
		which = $var$
		value = 7
	}
}

set_var_to_cantacuzino_constant = {
	set_variable = {
		which = $var$
		value = 8
	}
}

set_var_to_mavrocordatos_constant = {
	set_variable = {
		which = $var$
		value = 9
	}
}

tuh_set_founding_house_variable_effect = {
	if = {
		limit = {
			dynasty = "Basarab"
		}
		set_var_to_basarab_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Bibescu"
		}
		set_var_to_bibescu_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Draculesti"
		}
		set_var_to_draculesti_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Brancoveanu"
		}
		set_var_to_brancoveanu_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Movilesti"
		}
		set_var_to_movilesti_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Danesti"
		}
		set_var_to_danesti_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Ghica"
		}
		set_var_to_ghica_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Racovita"
		}
		set_var_to_racovita_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Cantacuzino"
		}
		set_var_to_cantacuzino_constant = {
			var = tuh_founding_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Mavrocordatos"
		}
		set_var_to_mavrocordatos_constant = {
			var = tuh_founding_house
		}
	}
	else = {
		#If the player has a dynasty that's not one of the 10 houses.
		set_variable = {
			which = tuh_founding_house
			value = -1
		}
	}
}

tuh_set_current_ruling_house_variable_effect = {
	if = {
		limit = {
			dynasty = "Basarab"
		}
		set_var_to_basarab_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Bibescu"
		}
		set_var_to_bibescu_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Draculesti"
		}
		set_var_to_draculesti_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Brancoveanu"
		}
		set_var_to_brancoveanu_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Movilesti"
		}
		set_var_to_movilesti_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Danesti"
		}
		set_var_to_danesti_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Ghica"
		}
		set_var_to_ghica_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Racovita"
		}
		set_var_to_racovita_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Cantacuzino"
		}
		set_var_to_cantacuzino_constant = {
			var = tuh_current_house
		}
	}
	else_if = {
		limit = {
			dynasty = "Mavrocordatos"
		}
		set_var_to_mavrocordatos_constant = {
			var = tuh_current_house
		}
	}
	else = {
		# This block executes if the dynasty is not one of the 10 specified houses.
		# Set tuh_current_house to a value indicating no specific recognized house is the founder.
		set_variable = {
			which = tuh_current_house
			value = -1			# Using -1 as it's outside the 0-9 range for recognized houses.
		}
	}
}

tuh_initialize_total_election_wins_vars = {
	set_variable = {
		which = basarab_total_wins
		value = 0
	}
	set_variable = {
		which = bibescu_total_wins
		value = 0
	}
	set_variable = {
		which = draculesti_total_wins
		value = 0
	}
	set_variable = {
		which = brancoveanu_total_wins
		value = 0
	}
	set_variable = {
		which = movilesti_total_wins
		value = 0
	}
	set_variable = {
		which = danesti_total_wins
		value = 0
	}
	set_variable = {
		which = ghica_total_wins
		value = 0
	}
	set_variable = {
		which = racovita_total_wins
		value = 0
	}
	set_variable = {
		which = cantacuzino_total_wins
		value = 0
	}
	set_variable = {
		which = mavrocordatos_total_wins
		value = 0
	}
}

tuh_initialize_consecutive_election_wins_vars = {
	set_variable = {
		which = basarab_consecutive_wins
		value = 0
	}
	set_variable = {
		which = bibescu_consecutive_wins
		value = 0
	}
	set_variable = {
		which = draculesti_consecutive_wins
		value = 0
	}
	set_variable = {
		which = brancoveanu_consecutive_wins
		value = 0
	}
	set_variable = {
		which = movilesti_consecutive_wins
		value = 0
	}
	set_variable = {
		which = danesti_consecutive_wins
		value = 0
	}
	set_variable = {
		which = ghica_consecutive_wins
		value = 0
	}
	set_variable = {
		which = racovita_consecutive_wins
		value = 0
	}
	set_variable = {
		which = cantacuzino_consecutive_wins
		value = 0
	}
	set_variable = {
		which = mavrocordatos_consecutive_wins
		value = 0
	}
}

# tuh_set_total_house_wins_to_var = {
# 	if = {
# 		limit = {
# 			is_var_basarab = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = basarab_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_bibescu = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = bibescu_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_draculesti = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = draculesti_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_brancoveanu = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = brancoveanu_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_movilesti = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = movilesti_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_danesti = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = danesti_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_ghica = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = ghica_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_racovita = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = racovita_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_cantacuzino = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = cantacuzino_total_wins
# 		}
# 	}
# 	else_if = {
# 		limit = {
# 			is_var_mavrocordatos = {
# 				var = $house_id_var$
# 			}
# 		}
# 		set_variable = {
# 			which = $var$
# 			which = mavrocordatos_total_wins
# 		}
# 	}
# }
tuh_update_house_total_wins = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = dynasty
			"Basarab" = {
				change_variable = {
					which = basarab_total_wins
					value = 1
				}
			}
			"Bibescu" = {
				change_variable = {
					which = bibescu_total_wins
					value = 1
				}
			}
			"Draculesti" = {
				change_variable = {
					which = draculesti_total_wins
					value = 1
				}
			}
			"Brancoveanu" = {
				change_variable = {
					which = brancoveanu_total_wins
					value = 1
				}
			}
			"Movilesti" = {
				change_variable = {
					which = movilesti_total_wins
					value = 1
				}
			}
			"Danesti" = {
				change_variable = {
					which = danesti_total_wins
					value = 1
				}
			}
			"Ghica" = {
				change_variable = {
					which = ghica_total_wins
					value = 1
				}
			}
			"Racovita" = {
				change_variable = {
					which = racovita_total_wins
					value = 1
				}
			}
			"Cantacuzino" = {
				change_variable = {
					which = cantacuzino_total_wins
					value = 1
				}
			}
			"Mavrocordatos" = {
				change_variable = {
					which = mavrocordatos_total_wins
					value = 1
				}
			}
		}
	}
}

tuh_update_house_consecutive_wins = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = dynasty
			"Basarab" = {
				change_variable = {
					which = basarab_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = basarab_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = basarab_consecutive_wins
					which = temp
				}
			}
			"Bibescu" = {
				change_variable = {
					which = bibescu_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = bibescu_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = bibescu_consecutive_wins
					which = temp
				}
			}
			"Draculesti" = {
				change_variable = {
					which = draculesti_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = draculesti_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = draculesti_consecutive_wins
					which = temp
				}
			}
			"Brancoveanu" = {
				change_variable = {
					which = brancoveanu_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = brancoveanu_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = brancoveanu_consecutive_wins
					which = temp
				}
			}
			"Movilesti" = {
				change_variable = {
					which = movilesti_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = movilesti_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = movilesti_consecutive_wins
					which = temp
				}
			}
			"Danesti" = {
				change_variable = {
					which = danesti_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = danesti_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = danesti_consecutive_wins
					which = temp
				}
			}
			"Ghica" = {
				change_variable = {
					which = ghica_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = ghica_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = ghica_consecutive_wins
					which = temp
				}
			}
			"Racovita" = {
				change_variable = {
					which = racovita_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = racovita_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = racovita_consecutive_wins
					which = temp
				}
			}
			"Cantacuzino" = {
				change_variable = {
					which = cantacuzino_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = cantacuzino_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = cantacuzino_consecutive_wins
					which = temp
				}
			}
			"Mavrocordatos" = {
				change_variable = {
					which = mavrocordatos_consecutive_wins
					value = 1
				}
				set_variable = {
					which = temp
					which = mavrocordatos_consecutive_wins
				}
				tuh_initialize_consecutive_election_wins_vars = yes
				set_variable = {
					which = mavrocordatos_consecutive_wins
					which = temp
				}
			}
		}
	}
}

tuh_precalculate_all_election_tooltips_effect = {
	set_variable = {
		which = house_id
		value = $house_id$
	}
	set_variable = {
		which = initial_$house$_total_legitimacy
		value = 50
	}
	if = {
		limit = {
			has_reform = empower_the_diet_of_the_ten
		}
		change_variable = {
			which = initial_$house$_total_legitimacy
			value = 10
		}
	}
	if = {
		limit = {
			has_country_flag = wal_union_ascendant_initial_legit_bonus
		}
		change_variable = {
			which = initial_$house$_total_legitimacy
			value = 10
		}
	}
	if = {
		limit = {
			is_var_cantacuzino = {
				var = house_id
			}
			capital = 151
		}
		change_variable = {
			which = initial_$house$_total_legitimacy
			value = 30
		}
	}
	set_variable = {
		which = precalc_$house$_total_legitimacy
		which = initial_$house$_total_legitimacy
	}
	###########################
	### TOTAL WINS HANDLING ###
	###########################
	set_variable = {
		which = precalc_$house$_total_wins
		which = $house$_total_wins
	}
	set_variable = {
		which = precalc_$house$_total_wins_gain
		which = precalc_$house$_total_wins
	}
	multiply_variable = {
		which = precalc_$house$_total_wins_gain
		value = 5
	}
	if = {
		limit = {
			check_variable = {
				which = $house$_total_wins
				value = 1
			}
		}
		change_variable = {
			which = precalc_$house$_total_legitimacy
			which = precalc_$house$_total_wins_gain
		}
	}
	#################################
	### CONSECUTIVE WINS HANDLING ###
	#################################
	set_variable = {
		which = precalc_$house$_consecutive_wins
		which = $house$_consecutive_wins
	}
	set_variable = {
		which = precalc_$house$_consecutive_wins_loss
		which = precalc_$house$_consecutive_wins
	}
	if = {
		limit = {
			is_var_cantacuzino = {
				var = house_id
			}
			capital = 151
		}
		multiply_variable = {
			which = precalc_$house$_consecutive_wins_loss
			value = -5
		}
	}
	else = {
		multiply_variable = {
			which = precalc_$house$_consecutive_wins_loss
			value = -10
		}
	}
	if = {
		limit = {
			check_variable = {
				which = $house$_consecutive_wins
				value = 1
			}
		}
		change_variable = {
			which = precalc_$house$_total_legitimacy
			which = precalc_$house$_consecutive_wins_loss
		}
	}
	set_variable = {
		which = display_$house$_consecutive_wins
		which = $house$_consecutive_wins
	}
	####################################
	### FOUNDING HOUSE BONUS HANDLING ##
	####################################
	if = {
		limit = {
			is_founding_house_set = yes
			is_variable_equal = {
				which = tuh_founding_house
				which = house_id
			}
		}
		change_variable = {
			which = precalc_$house$_total_legitimacy
			value = 25
		}
	}
	##############################
	### BASARAB BONUS HANDLING ###
	##############################
	if = {
		limit = {
			is_var_basarab = {
				var = house_id
			}
		}
		change_variable = {
			which = precalc_$house$_total_legitimacy
			value = 15
		}
	}
	######################################
	### LOW FACTION INFLUENCE HANDLING ###
	######################################
	set_variable = {
		which = precalc_$house$_low_influence_penalty
		value = 0
	}
	if = {
		limit = {
			NOT = {
				faction_influence = {
					faction = $house$_faction
					influence = 10
				}
			}
			NOT = {
				AND = {
					is_var_cantacuzino = {
						var = house_id
					}
					capital = 151
				}
			}
		}
		change_variable = {
			which = precalc_$house$_low_influence_penalty
			value = 20
		}
	}
	subtract_variable = {
		which = precalc_$house$_total_legitimacy
		which = precalc_$house$_low_influence_penalty
	}
	################################################
	### MAKE SURE LEGITIMACY IS NOT > 100 OR < 0 ###
	################################################
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = precalc_$house$_total_legitimacy
					value = 0
				}
			}
		}
		set_variable = {
			which = precalc_$house$_total_legitimacy
			value = 0
		}
	}
	if = {
		limit = {
			check_variable = {
				which = precalc_$house$_total_legitimacy
				value = 101
			}
		}
		set_variable = {
			which = precalc_$house$_total_legitimacy
			value = 100
		}
	}
}

tuh_fire_pretender_event_based_on_legitimacy = {
	export_to_variable = {
		which = legit
		value = trigger_value:legitimacy
	}
	set_variable = {
		which = threshold
		value = 100
	}
	subtract_variable = {
		which = threshold
		which = legit
	}
	random_variable = {
		which = rand
		value = 100
	}
	round_variable = {
		which = rand
		value = -1
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = rand
					which = threshold
				}
			}
		}
		country_event = {
			id = tuh_events.0
			days = 1
		}
	}
}

tuh_add_estate_loyalty_on_dev_effect = {
	if = {
		limit = {
			has_tax_building_trigger = yes
		}
		random = {
			chance = 40
			owner = {
				add_estate_loyalty = {
					estate = estate_church
					loyalty = 1
				}
			}
		}
	}
	if = {
		limit = {
			has_trade_building_trigger = yes
		}
		random = {
			chance = 40
			owner = {
				add_estate_loyalty = {
					estate = estate_burghers
					loyalty = 1
				}
			}
		}
	}
	if = {
		limit = {
			has_manpower_building_trigger = yes
		}
		random = {
			chance = 40
			owner = {
				add_estate_loyalty = {
					estate = estate_nobles
					loyalty = 1
				}
			}
		}
	}
}

romanian_elective_monarchy_on_dev_effect = {
	if = {
		limit = {
			is_state = yes
			owner = {
				has_government_attribute = romanian_elective_monarchy
			}
		}
		tuh_add_faction_influence_on_dev_effect = yes
		if = {
			limit = {
				owner = {
					dynasty = "Brancoveanu"
				}
			}
			tuh_add_estate_loyalty_on_dev_effect = yes
		}
	}
}

#
tuh_clear_dynasty_specific_bonuses = {
	tuh_clear_ghica_bonuses = yes
	tuh_clear_danesti_coastal_defences = yes
	clr_country_flag = movilesti_can_propagate_religion_bonus
}

tuh_clear_ghica_bonuses = {
	if = {
		limit = {
			has_country_flag = fra_courthouse_bonus_flag
		}
		clr_country_flag = fra_courthouse_bonus_flag
		every_owned_province = {
			limit = {
				has_courthouse_building_trigger = yes
			}
			remove_province_modifier = fra_improved_court_houses_modifier
		}
	}
}

tuh_find_highest_house_influence = {
	set_variable = {
		which = highest_influence_house
		value = -1
	}
	if = {
		limit = {
			faction_in_power = basarab_faction
		}
		set_var_to_basarab_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = bibescu_faction
		}
		set_var_to_bibescu_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = draculesti_faction
		}
		set_var_to_draculesti_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = brancoveanu_faction
		}
		set_var_to_brancoveanu_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = movilesti_faction
		}
		set_var_to_movilesti_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = danesti_faction
		}
		set_var_to_danesti_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = ghica_faction
		}
		set_var_to_ghica_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = racovita_faction
		}
		set_var_to_racovita_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = cantacuzino_faction
		}
		set_var_to_cantacuzino_constant = {
			var = highest_influence_house
		}
	}
	if = {
		limit = {
			faction_in_power = mavrocordatos_faction
		}
		set_var_to_mavrocordatos_constant = {
			var = highest_influence_house
		}
	}
}

tuh_define_exiled_house_candidates = {
	define_exiled_ruler = {
		exiled_as = tuh_elections_basarab
		min_age = 20
		max_age = 75
		change_adm = 1
		option = 0
		dynasty = "Basarab"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_bibescu
		min_age = 20
		max_age = 75
		change_dip = 1
		option = 1
		dynasty = "Bibescu"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_draculesti
		min_age = 20
		max_age = 75
		change_mil = 1
		option = 2
		dynasty = "Draculesti"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_brancoveanu
		min_age = 20
		max_age = 75
		change_adm = 1
		option = 3
		dynasty = "Brancoveanu"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_movilesti
		min_age = 20
		max_age = 75
		change_dip = 1
		option = 4
		dynasty = "Movilesti"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_danesti
		min_age = 20
		max_age = 75
		change_mil = 1
		option = 5
		dynasty = "Danesti"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_ghica
		min_age = 20
		max_age = 75
		change_adm = 1
		option = 6
		dynasty = "Ghica"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_racovita
		min_age = 20
		max_age = 75
		change_dip = 1
		option = 7
		dynasty = "Racovita"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_cantacuzino
		min_age = 20
		max_age = 75
		change_mil = 1
		option = 8
		dynasty = "Cantacuzino"
	}
	define_exiled_ruler = {
		exiled_as = tuh_elections_mavrocordatos
		min_age = 20
		max_age = 75
		change_adm = 1
		option = 9
		dynasty = "Mavrocordatos"
	}
}

tuh_spawn_pretenders_from_the_other_9_houses = {
	hidden_effect = {
		tuh_define_exiled_house_candidates = yes
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Basarab"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = basarab_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = basarab_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Bibescu"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = bibescu_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = bibescu_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Draculesti"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = draculesti_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = draculesti_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Brancoveanu"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = brancoveanu_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = brancoveanu_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Movilesti"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = movilesti_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = movilesti_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Danesti"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = danesti_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = danesti_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Ghica"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = ghica_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = ghica_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Racovita"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = racovita_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = racovita_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Cantacuzino"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = cantacuzino_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = cantacuzino_pretender_rebels
				}
			}
		}
	}
	if = {
		limit = {
			NOT = {
				dynasty = "Mavrocordatos"
			}
		}
		if = {
			limit = {
				any_owned_province = {
					has_rebels_in_province = no
				}
			}
			random_owned_province = {
				limit = {
					has_rebels_in_province = no
				}
				spawn_rebels = {
					size = $size$
					type = mavrocordatos_pretender_rebels
				}
			}
		}
		else = {
			random_owned_province = {
				spawn_rebels = {
					size = $size$
					type = mavrocordatos_pretender_rebels
				}
			}
		}
	}
}

tuh_apply_government_mechanic_cooldown = {
	if = {
		limit = {
			has_government_attribute = revive_public_punishments_shorter_cooldown
		}
		if = {
			limit = {
				OR = {
					NOT = {
						has_country_flag = promote_dynastic_prerogative_cooldown
					}
					had_country_flag = {
						flag = promote_dynastic_prerogative_cooldown
						days = 7300
					}
				}
			}
			set_country_flag = promote_dynastic_prerogative_cooldown
		}
		if = {
			limit = {
				OR = {
					NOT = {
						has_country_flag = forge_a_coalition_cooldown
					}
					had_country_flag = {
						flag = forge_a_coalition_cooldown
						days = 7300
					}
				}
			}
			set_country_flag = forge_a_coalition_cooldown
		}
		set_country_flag = revive_public_punishments_cooldown
	}
	else = {
		set_country_flag = promote_dynastic_prerogative_cooldown
		set_country_flag = forge_a_coalition_cooldown
		set_country_flag = revive_public_punishments_cooldown
	}
}

tuh_clear_government_mechanic_cooldowns = {
	custom_tooltip = tuh_clear_government_mechanic_cooldowns_tooltip
	hidden_effect = {
		clr_country_flag = promote_dynastic_prerogative_cooldown
		clr_country_flag = forge_a_coalition_cooldown
		clr_country_flag = revive_public_punishments_cooldown
	}
}

tuh_set_danesti_coastal_defences = {
	custom_tooltip = danesti_coastal_defences_tooltip
	tooltip = {
		random_owned_province = {
			limit = {
				has_port = yes
			}
			add_province_modifier = {
				name = danesti_coastal_defences
				duration = -1
			}
		}
	}
	hidden_effect = {
		every_owned_province = {
			limit = {
				has_port = yes
			}
			add_province_modifier = {
				name = danesti_coastal_defences
				duration = -1
			}
		}
	}
}

tuh_clear_danesti_coastal_defences = {
	every_owned_province = {
		limit = {
			has_port = yes
			has_province_modifier = danesti_coastal_defences
		}
		remove_province_modifier = danesti_coastal_defences
	}
}

tuh_calculate_province_trade_goods_score = {
	export_to_variable = {
		which = local_trade_goods_size
		value = modifier:trade_goods_size
	}
	set_variable = {
		which = local_production_score
		which = local_trade_goods_size
	}
	export_to_variable = {
		which = local_trade_goods_size_modifier
		value = modifier:trade_goods_size_modifier
	}
	change_variable = {
		which = local_trade_goods_size_modifier
		value = 1
	}
	multiply_variable = {
		which = local_production_score
		which = local_trade_goods_size_modifier
	}
}

tuh_convert_highest_trade_goods_wool_province_to_silk = {
	every_owned_province = {
		limit = {
			trade_goods = wool
		}
		tuh_calculate_province_trade_goods_score = yes
		if = {
			limit = {
				has_saved_global_event_target = highest_trade_goods_wool_province
			}
			if = {
				limit = {
					check_variable = {
						which = local_production_score
						which = event_target:highest_trade_goods_wool_province
					}
				}
				save_global_event_target_as = highest_trade_goods_wool_province
			}
		}
		else = {
			save_global_event_target_as = highest_trade_goods_wool_province
		}
	}
	event_target:highest_trade_goods_wool_province = {
		change_trade_goods = silk
		add_province_modifier = {
			name = tuh_fledgling_silk_industry
			duration = 7300
		}
		add_base_production = 1
	}
	clear_global_event_target = highest_trade_goods_wool_province
}

tuh_galleass_gift_effect = {
	if = {
		limit = {
			has_country_flag = tuh_galleass_gift
		}
		if = {
			limit = {
				owns = 112
			}
			112 = {
				custom_tooltip = tuh_galleass_tooltip
				hidden_effect = {
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
				}
			}
		}
		else = {
			random_owned_province = {
				limit = {
					has_port = yes
				}
				custom_tooltip = tuh_galleass_tooltip
				hidden_effect = {
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
					galleass_galley = owner
				}
			}
		}
	}
}
